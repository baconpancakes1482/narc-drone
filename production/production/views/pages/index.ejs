
<html>
<html lang="en">
<head>
<meta name="description" content="The Black Team's NARC Drone Telemetry and Video feed display interface" charset="UTF-8">
<title>NARC DRONE</title>
<link href="/css/style.css" rel="stylesheet">
</head>
<body>
    <div class="banner"></div>
    <div class="footer"></div>
    <div class="left"></div>
    <div class="right"></div>
    <div class="container-app">
        <div class="video-feed">
            <!-- Decide on resolution for camera feed and expect h264-->
            <div id="camera-feed"> 
		        <canvas id="video-canvas"></canvas>
		     <div id="timer">
                    <div id="time-prompt">Operation Time:</div>
                    <div id="hours"></div>
                    <div id="minutes"></div>
                    <div id="seconds"></div>
             </div>
                <div id="elasped_seconds"></div>
	        </div>
        </div>
        <div class="safe-abort">
            <div id="abort-div">ABORT</div>
        </div>
        <div class="battery-status">
            <!-- Make some visual graphic for battery level with percentage-->
            <div id="battery-percentage"><%- data.bat_re %></div>
            <div id="battery-meter"></div>
        </div>
	    <div class="t-container">
            <div class="distance-traveled">
                 <!-- Record distance traveled-->
		        <div id="distance-prompt">distance traveled:</div>
                <div id="distance-unit">m</div>
		        <div id="distance-container">
                    <div id="distance"></div>
		        </div>
            </div>
            <div class="gps">
		        <div id="lat-prompt">lat:</div>
                <div id="lat-unit">degE7</div>
		        <div id="lat-container">
                    <div id="lat"><%- data.lat %></div> 
                </div>
                <div id="long-prompt">long:</div>
                <div id="long-unit">degE7</div>
                <div id="long-container">
                    <div id="long"><%- data.long %></div>  
                </div>
                <div id="xgyro-prompt">xgyro:</div>
                <div id="xgyro-unit">mrad/s</div>
                <div id="xgyro-container">
                    <div id="xgyro"><%- data.xgyro %></div>
                </div>
                <div id="ygyro-prompt">ygyro:</div>
                <div id="ygyro-unit">mrad/s</div>
                <div id="ygyro-container">
                    <div id="ygyro"><%- data.ygyro %></div>
                </div>
                <div id="zgyro-prompt">zgyro:</div>
                <div id="zgyro-unit">mrad/s</div>
                <div id="zgyro-container">
                     <div id="zgyro"><%- data.zgyro %></div>
                </div>
                <div id="xmag-prompt">xmag:</div>
                <div id="xmag-unit">mgauss</div>
                <div id="xmag-container">
                    <div id="xmag"><%- data.xmag %></div>
                </div>
                <div id="ymag-prompt">ymag:</div>
                <div id="ymag-unit">mgauss</div>
                <div id="ymag-container">
                    <div id="ymag"><%- data.ymag %></div>
                </div>
                <div id="zmag-prompt">zmag:</div>
                <div id="zmag-unit">mgauss</div>
                <div id="zmag-container">
                    <div id="zmag"><%- data.zmag %></div>
                </div>
            </div>
            <div class="position">
		        <div id="x-prompt">x:</div>
                <div id="x-unit">m</div>
		        <div id="x-container">
                    <div id="x"><% data.x %></div>
		        </div>               
		        <div id="y-prompt">y:</div>
                <div id="y-unit">m</div>
		        <div id="y-container">
                    <div id="y"><%- data.y %></div>
		        </div>
		        <div id="z-prompt">z:</div>
                <div id="z-unit">m</div>
                <div id="z-container">
                    <div id="z"><%- data.z %></div>
		        </div>
            </div>
            <div class="height">
		        <div id="altitude-prompt">altitude:</div>
                <div id="altitude-unit">mm</div>
		        <div id="altitude-container">
                    <div id="altitude"><%- data.alt %></div>
		        </div>
            </div>
            <div class="orientation">
		        <div id="heading-prompt">heading:</div>
                <div id="heading-unit">cdeg</div>
		        <div id="heading-container">
                    <div id="heading"><%- data.heading %></div>
		        </div>
                <div id="roll-prompt">roll:</div>
                <div id="roll-unit">rad</div>
                <div id="roll-container">
                    <div id="roll"><%- data.roll %></div>
                </div>
		        <div id="pitch-prompt">pitch:</div>
                <div id="pitch-unit">rad</div>
		        <div id="pitch-container">
                    <div id="pitch"><%- data.pitch %></div>
		        </div>
                <div id="yaw-prompt">yaw:</div>
                <div id="yaw-unit">rad</div>
                <div id="yaw-container">
                    <div id="yaw"><%- data.yaw %></div>
                </div>
                <div id="rollspeed-prompt">rollspeed:</div>
                <div id="rollspeed-unit">rad/s</div>
                <div id="rollspeed-container">
                    <div id="rollspeed"><%- data.rollspeed %></div>
                </div>
                <div id="pitchspeed-prompt">pitchspeed:</div>
                <div id="pitchspeed-unit">rad/s</div>
                <div id="pitchspeed-container">
                    <div id="pitchspeed"><%- data.pitchspeed %></div>
                </div>
                <div id="yawspeed-prompt">yawspeed:</div>
                <div id="yawspeed-unit">rad/s</div>
                <div id="yawspeed-container">
                    <div id="yawspeed"><%- data.yawspeed %></div>
                </div>
            </div>
            <div class="drone-speed">
		        <div id="vx-prompt">vx:</div>
                <div id="vx-unit">m/s</div>
		        <div id="vx-container">
                    <div id="vx"><%- data.vx %></div>
		        </div>
                <div id="vy-prompt">vy:</div>
                <div id="vy-unit">m/s</div>
                <div id="vy-container">
                    <div id="vy"><%- data.vy %></div>
                </div>
                <div id="vz-prompt">vz:</div>
                <div id="vz-unit">m/s</div>
                <div id="vz-container">
                    <div id="vz"><%- data.vz %></div>
                </div>
            </div>
    </div>	
	<div class="vehicle-health"> 
        <div class="vehicle-signals-intel">
			<div id="uplink-prompt">uplink:</div>
            <div id="uplink-unit">bytes/s</div>
			<div id="uplink-container">
                <div id="uplink"><%- data.tx_rate %></div>
			</div>
			<div id="downlink-prompt">downlink:</div>
            <div id="downlink-unit">bytes/s</div>
			<div id="downlink-container">
                <div id="downlink"><%- data.rx_rate %></div>
			</div>
			<div id="signal-strength-prompt">signal strength:</div>
            <div id="signal-strength-unit">dB</div>
			<div id="signal-strength-container">
                <div id="signal-strength"><%- data.rssi %></div>
			</div>
			<div id="packet-loss-prompt">packet loss:</div>
			<div id="packet-loss-container">
                <div id="packet-loss"></div>
			</div>
			<div id="latency-prompt">latency:</div>
			<div id="latency-container">
                <div id="latency"></div>
			</div>
        </div>
        <div class="vehicle-status">
            <div id="time-boot-prompt">time since boot:</div>
            <div id="time-boot-unit">ms</div>
                <div id="vehicle-initialization">
			        <div id="time_boot">'<%-data.time_boot %>'</div>
                </div>
			    <div id="flight-mode-prompt">flight mode:</div>
                <div id="flight-mode-container">
                    <div id="flight-mode"><%- data.vtol_state %></div>
                </div>
                <div id="lever-deploy-prompt">lever deployed:</div>
                <div id="lever-deploy-container">
                    <div id="lever-deploy"></div>
                </div>
            </div>
        <div class="vehicle-thrust">
			<div id="motor-1-prompt">motor-1:</div>
            <div id="motor-1-unit">us</div>
            <div id="motor-1-container">
                <div id="motor-1"><%- data.servo1 %></div>
            </div>
			<div id="motor-2-prompt">motor-2:</div>
            <div id="motor-2-unit">us</div>
            <div id="motor-2-container">
                <div id="motor-2"><%- data.servo2 %></div>
            </div>
			<div id="motor-3-prompt">motor-3:</div>
            <div id="motor-3-unit">us</div>
            <div id="motor-3-container">
                <div id="motor-3"><%- data.servo3 %></div>
            </div>
        </div>
	</div>
</div>
     
      <script>
          // operation start time in seconds
          // May have to reduce operations of time and also is this appropriate to be here?
           let operation_time = Math.round(Date.now()/1000);
           let current_year = Math.round(+new Date().getFullYear());
           let current_day = Math.round(+new Date().getUTCDate());
           let current_month = Math.round(+new Date().getMonth()) + 1;
           let minutes = 0;
           let hours = 0;
           let seconds = 0;
           let time_elasped = 0;
           console.log("Operation Start Timestamp:[ 0:0:0 %s/%s/%s ]", current_month, current_day, current_year);
    
        updateContent = setInterval(async function(){ 
              current_year = await Math.round(+new Date().getFullYear());
              current_day = await Math.round(+new Date().getUTCDate());
              current_month = await Math.round(+new Date().getMonth()) + 1;
              time_elasped = await Math.round((Date.now()/1000)- operation_time);
                  
                  seconds = await time_elasped;
                  seconds %= await 60;
                  minutes = await Math.floor(time_elasped / 60);
                  minutes %= await 60;
                  hours = await Math.floor((time_elasped/60/60));
                  hours %= await 24;

              await fetch("http://10.0.2.100:8001/api/events/?", 
                { headers: {
                    'Cache-Control': 'no-cache',
		            'Access-Control-Allow-Origin': '*'
                }
                    }).then(response => {
                  const json = response.json();
                  console.log("Timestamp:[ %s:%s:%s %s/%s/%s ]", hours,minutes,seconds, current_month, current_day, current_year);
                  console.log(json);
                  return json;
               }).then( data => {
                    console.log(data);
                    document.getElementById("time_boot").innerHTML = (data.time_boot).toFixed(2);
                    document.getElementById("battery-percentage").innerHTML = (data.bat_re).toFixed(2);
                    document.getElementById("lat").innerHTML = (data.lat).toFixed(2);
                    document.getElementById("long").innerHTML = (data.long).toFixed(2);
                    document.getElementById("xgyro").innerHTML = (data.xgyro).toFixed(2);
                    document.getElementById("ygyro").innerHTML = (data.ygyro).toFixed(2);
                    document.getElementById("zgyro").innerHTML = (data.zgyro).toFixed(2);
                    document.getElementById("xmag").innerHTML = (data.xmag).toFixed(2);
                    document.getElementById("ymag").innerHTML = (data.ymag).toFixed(2);
                    document.getElementById("zmag").innerHTML = (data.zmag).toFixed(2);
                    document.getElementById("x").innerHTML = (data.x).toFixed(2);
                    document.getElementById("y").innerHTML = (data.y).toFixed(2);
                    document.getElementById("z").innerHTML = (data.z).toFixed(2);
                    document.getElementById("altitude").innerHTML = (data.alt).toFixed(2);
                    document.getElementById("heading").innerHTML = (data.heading).toFixed(2);
                    document.getElementById("roll").innerHTML = (data.roll).toFixed(2);
                    document.getElementById("pitch").innerHTML = (data.pitch).toFixed(2);
                    document.getElementById("yaw").innerHTML = (data.yaw).toFixed(2);
                   document.getElementById("rollspeed").innerHTML = (data.rollspeed).toFixed(2);
                   document.getElementById("pitchspeed").innerHTML = (data.pitchspeed).toFixed(2);
                   document.getElementById("yawspeed").innerHTML = (data.yawspeed).toFixed(2);
                    document.getElementById("vx").innerHTML = (data.vx).toFixed(2);
                    document.getElementById("vy").innerHTML = (data.vy).toFixed(2);
                    document.getElementById("vz").innerHTML = (data.vz).toFixed(2);
                    document.getElementById("uplink").innerHTML = (data.tx_rate).toFixed(2);
                    document.getElementById("downlink").innerHTML = (data.rx_rate).toFixed(2);
                    document.getElementById("signal-strength").innerHTML = (data.rssi).toFixed(2);
                    document.getElementById("flight-mode").innerHTML = data.vtol_state;
                    document.getElementById("motor-1").innerHTML = (data.servo1).toFixed(2);
                    document.getElementById("motor-2").innerHTML = (data.servo2).toFixed(2);
                    document.getElementById("motor-3").innerHTML = (data.servo3).toFixed(2);
                      document.getElementById("elasped_seconds").innerHTML = "Time Elasped: " + time_elasped + "s";
                      document.getElementById("hours").innerHTML = hours + "hr";
                      document.getElementById("seconds").innerHTML = seconds + "s";
                      document.getElementById("minutes").innerHTML = minutes + "min";
      
                  }).catch(error => {
                      console.log(error);
                  });
        
             }, 500);

      </script>
      <script src="jsmpeg.min.js"></script>	
      <script>
            var canvas = document.getElementById('video-canvas');
                var url = 'ws://10.0.2.100:8082/';
                var player = new JSMpeg.Player(url, {canvas: canvas});
		player.play();
      </script>
</body>
</html>
